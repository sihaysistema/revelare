{"version":3,"file":"revelar.min.js","sources":["../../../../apps/revelare/revelare/public/js/revelar.js"],"sourcesContent":["// Copyright (c) 2018, Si Hay Sistema (SHS) and contributors\n// For license information, please see license.txt\n\n/*\n// --- FUNCIONALIDAD EXTRA ---\n\n// TO FIX: 1. Cuando se crea un nuevo producto desde un dialogo.\n//         2. Recomendar no utilizar el dialogo para crear productos, sino a pantalla completa para acceder a todas las funciones\n//            Se puede desactivar el dialogo personalizando el formulario correspondiente.\n// frappe.ui.form.on(\"Item\", {\n//     // VERIFICACION AL GUARDAR DOCUMENTO: Cuando se guardar el documento, verificara en la tabla hija 'uoms'\n//     // que exista un elemento default, si no existe un elemento default no permitira guardar el documento.\n//     validate: function (frm, cdt, cdn) {\n//         if (cur_frm.doc.uoms === undefined) {\n//             frappe.msgprint('Por favor selecciona una unidad de medida default para Sales Analitycs 2');\n//             frm.disable_save();\n//         } else {\n//             let uncheck = 0;\n//             frm.doc.uoms.forEach((uom_element, index) => {\n//                 if (uom_element.revelare_default_uom_sales_analytics_2) {\n//                     frm.enable_save();\n//                     uncheck++;\n//                 }\n//             });\n//             if (uncheck < 1) {\n//                 // FIX MESSAGE\n//                 frappe.msgprint('Por favor selecciona una unidad de medida default para Sales Analitycs');\n//                 frm.disable_save();\n//             }\n//         }\n//     }\n// });\n*/\n\n// UOM Conversion Detail TABLA HIJA DE Item\nfrappe.ui.form.on('UOM Conversion Detail', {\n    // Ejecuta la funcion cuando exista una interaccion con 'revelare_default_uom_sales_analytics_2'\n    revelare_default_uom_sales_analytics_2: function (frm, cdt, cdn) {\n        let check = 0;\n        // Recorre los elementos de la tabla hija ubicandose exactamente en la fila en que \n        // estemos trabajando, esto para obtener datos exactos.\n        frm.doc.uoms.forEach((uom_row_i, index_i) => {\n            if (uom_row_i.name == cdn) {\n                (uom_row_i.revelare_default_uom_sales_analytics_2) ? frm.enable_save() : console.log('unckecked');\n                // FORMA 2! RECOMENDADA ES5 > :)\n                // Unicamente va permitir que exista un elemento seleccionado\n                frm.doc.uoms.forEach((uom_row, indice) => {\n                    if (uom_row.revelare_default_uom_sales_analytics_2) {\n                        check++;\n                        if (check > 1) {\n                            frappe.msgprint('Solamente debe haber un elemento seleccionado');\n                            frm.doc.uoms[index_i].revelare_default_uom_sales_analytics_2 = 0;\n                            refresh_field('uoms');\n                            // console.log(uom_row_i.revelare_default_uom_sales_analytics_2)\n                        }\n                    }\n                });\n            }\n        });\n    }\n});\n\n// Validando CustomField Journal Entry Account\nfrappe.ui.form.on('Journal Entry', {\n    setup : function(frm){\n        cur_frm.set_query(\"inflow_component\", \"accounts\", function () {\n            return {\n                \"filters\": {\n                    \"is_group\": 0,\n                    \"cash_effect\":\"Inflow\"\n                }\n            };\n        });\n        cur_frm.set_query(\"outflow_component\", \"accounts\", function () {\n            return {\n                \"filters\": {\n                    \"is_group\": 0,\n                    \"cash_effect\":\"Outflow\"\n                }\n            };\n        });\n    }\n});\n\n// Funcionalidad sobre tabla hija en Journal Entry\nfrappe.ui.form.on('Journal Entry Account', {\n    account : function(frm, cdt,cdn){\n        //Creamos objeto de la tabla hija\n        let row = frappe.get_doc(cdt, cdn);\n        // Validamos con un booleano si desde python el tipo de cuenta es 'cash' o 'bank'\n        frappe.call({\n            method: 'revelare.data.get_type_account',\n            args: {\n                account_name: row.account\n            },\n            callback: (r) => {\n                console.log(r.message)\n                if(r.message == true){\n\n                    if(frm.credit_in_account_currency > 0){\n                        //frappe.msgprint(\"Credit es > 0\")\n                        // Hacemos visible el campo outflow_component\n                        var df=frappe.meta.get_docfield(\"Journal Entry Account\", \"outflow_component\",frm.doc.name);\n                        df.hidden=0;\n\n                        // Y ocultamos el campo inflow_component\n                        var df2=frappe.meta.get_docfield(\"Journal Entry Account\", \"inflow_component\",frm.doc.name);\n                        df2.hidden=1;\n                        frm.refresh_fields();\n                    } else if(frm.debit_in_account_currency > 0){\n                        //frappe.msgprint(\"debit es > 0\")\n                        // Hacemos visible el campo inflow_component\n                        var df=frappe.meta.get_docfield(\"Journal Entry Account\", \"inflow_component\",frm.doc.name);\n                        df.hidden=0;\n\n                        // Y ocultamos el campo outflow_component\n                        var df2=frappe.meta.get_docfield(\"Journal Entry Account\", \"outflow_component\",frm.doc.name);\n                        df2.hidden=1;\n                        frm.refresh_fields();\n                    } else {\n                        //frappe.msgprint(\"Default, debit y credit = 0\")\n                        // Hacemos visible el campo inflow_component\n                        var df=frappe.meta.get_docfield(\"Journal Entry Account\", \"inflow_component\",frm.doc.name);\n                        df.hidden=0;\n\n                        // Y ocultamos el campo outflow_component\n                        var df2=frappe.meta.get_docfield(\"Journal Entry Account\", \"outflow_component\",frm.doc.name);\n                        df2.hidden=1;\n                        frm.refresh_fields();\n                    }\n                } else {\n                    //frappe.msgprint(\"Campos ocultados\")\n                    // Ocultamos el campo inflow_component\n                    var df=frappe.meta.get_docfield(\"Journal Entry Account\", \"inflow_component\",frm.doc.name);\n                    df.hidden=1;\n\n                    // Ocultamos el campo direct_cash_flow_component\n                    var df2=frappe.meta.get_docfield(\"Journal Entry Account\", \"outflow_component\",frm.doc.name);\n                    df2.hidden=1;\n\n                    row.inflow_component = ''\n                    row.outflow_component = ''\n                    frm.refresh_fields();\n                }\n            }\n        })\n    },\n    party_type : function(frm, cdt,cdn){\n        let row = frappe.get_doc(cdt, cdn);\n        if(row.party_type == 'Customer'){\n            //frappe.msgprint(\"Fijando valor inflow component\")\n            // Dandode el valor al campo respecto a Party Type\n            cur_frm.set_value(row.inflow_component,'Receipts from Customers');\n        }\n        frm.refresh();\n    }, \n    debit_in_account_currency : function(frm,cdt,cdn){\n        //Creamos objeto de la tabla hija\n        let row = frappe.get_doc(cdt, cdn);\n        // Validamos con un booleano si desde python el tipo de cuenta es 'cash' o 'bank'\n        frappe.call({\n            method: 'revelare.data.get_type_account',\n            args: {\n                account_name: row.account\n            },\n            callback: (r) => {\n                console.log(r.message)\n                if(r.message == true){\n\n                    // Si debito es => 0 Filtrar componenete, mostrar solo Inflow\n                    let row = frappe.get_doc(cdt, cdn);\n                    if(row.debit_in_account_currency > 0){\n                        //frappe.msgprint(\"Debit trigger; debit > 0\")\n                        // Hacemos visible el campo inflow_component\n                        var df=frappe.meta.get_docfield(\"Journal Entry Account\", \"inflow_component\",frm.doc.name);\n                        df.hidden=0;\n\n                        // Y ocultamos el campo outflow_component\n                        var df2=frappe.meta.get_docfield(\"Journal Entry Account\", \"outflow_component\",frm.doc.name);\n                        df2.hidden=1;\n                    } else {\n                        //frappe.msgprint(\"Debit trigger; debit > 0\")\n                        // Hacemos visible el campo outflow_component\n                        var df=frappe.meta.get_docfield(\"Journal Entry Account\", \"outflow_component\",frm.doc.name);\n                        df.hidden=0;\n\n                        // Y ocultamos el campo inflow_component\n                        var df2=frappe.meta.get_docfield(\"Journal Entry Account\", \"inflow_component\",frm.doc.name);\n                        df2.hidden=1;\n                    }\n                    frm.refresh();\n                } else {\n                    //frappe.msgprint(\"Campos ocultados\")\n                    // Ocultamos el campo inflow_component\n                    var df=frappe.meta.get_docfield(\"Journal Entry Account\", \"inflow_component\",frm.doc.name);\n                    df.hidden=1;\n\n                    // Ocultamos el campo direct_cash_flow_component\n                    var df2=frappe.meta.get_docfield(\"Journal Entry Account\", \"outflow_component\",frm.doc.name);\n                    df2.hidden=1;\n\n                    row.inflow_component = ''\n                    row.outflow_component = ''\n                    frm.refresh_fields();\n                }\n            }\n        })\n    },\n    credit_in_account_currency : function(frm,cdt,cdn){\n        // Si credito es => 0 Filtrar componenete, mostrar solo Outflow\n        let row = frappe.get_doc(cdt, cdn);\n\n        frappe.call({\n            method: 'revelare.data.get_type_account',\n            args: {\n                account_name: row.account\n            },\n            callback: (r) => {\n                console.log(r.message)\n                if(r.message == true){\n                    if(row.credit_in_account_currency > 0){\n                        // Hacemos visible el campo outflow_component\n                        var df=frappe.meta.get_docfield(\"Journal Entry Account\", \"outflow_component\",frm.doc.name);\n                        df.hidden=0;\n            \n                        // Y ocultamos el campo inflow_component\n                        var df2=frappe.meta.get_docfield(\"Journal Entry Account\", \"inflow_component\",frm.doc.name);\n                        df2.hidden=1;\n                    }else {\n                        // Hacemos visible el campo inflow_component\n                        var df=frappe.meta.get_docfield(\"Journal Entry Account\", \"inflow_component\",frm.doc.name);\n                        df.hidden=0;\n            \n                        // Y ocultamos el campo outflow_component\n                        var df2=frappe.meta.get_docfield(\"Journal Entry Account\", \"outflow_component\",frm.doc.name);\n                        df2.hidden=1;\n                    }\n                    frm.refresh();\n                } else {\n                    //frappe.msgprint(\"Campos ocultados\")\n                    // Ocultamos el campo inflow_component\n                    var df=frappe.meta.get_docfield(\"Journal Entry Account\", \"inflow_component\",frm.doc.name);\n                    df.hidden=1;\n\n                    // Ocultamos el campo direct_cash_flow_component\n                    var df2=frappe.meta.get_docfield(\"Journal Entry Account\", \"outflow_component\",frm.doc.name);\n                    df2.hidden=1;\n\n                    row.inflow_component = ''\n                    row.outflow_component = ''\n                    frm.refresh_fields();\n                }\n            }\n        })\n\n    }\n});\n\n\n// Validando customfield de Payment Entry\nfrappe.ui.form.on(\"Payment Entry\", {\n    setup: function(frm) {\n        frm.set_query(\"direct_cash_flow_component\", function() {\n            return {\n            filters: [\n                [\"Direct Cash Flow Component\",\"is_group\", \"in\", [\"0\"]]\n            ]\n            }\n        });\n    }\n});\n"],"names":["frappe","ui","form","on","revelare_default_uom_sales_analytics_2","frm","cdt","cdn","let","check","doc","uoms","forEach","uom_row_i","index_i","name","enable_save","console","log","uom_row","indice","msgprint","refresh_field","setup","cur_frm","set_query","filters","is_group","cash_effect","account","row","get_doc","call","method","args","account_name","callback","r","message","credit_in_account_currency","meta","get_docfield","hidden","refresh_fields","debit_in_account_currency","inflow_component","outflow_component","party_type","set_value","refresh"],"mappings":"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"}