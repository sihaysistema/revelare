(function () {
  'use strict';

  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //

  var script = {
    name: "DataCard",
    props: ["tripData"],
    data: function data() {},
    methods: {
      openInWaze: function openInWaze() {
        // Para abrir en movil
        var url = "https://waze.com/ul?q=" + (this.tripData.lat) + "," + (this.tripData.lng) + "&navigate=yes&zoom=17";
        if (this.detectMob()) {
          window.open(url).focus();
        } else {
          url = "https://www.waze.com/ul?ll=" + (this.tripData.lat) + "%2C" + (this.tripData.lng) + "&navigate=yes&zoom=17";
          window.open(url, "_blank").focus();
        }
      },
      openInGoogleMaps: function openInGoogleMaps() {
        //   let url = `maps://www.google.com/maps/dir/?api=1&travelmode=driving&layer=traffic&destination=${this.tripData.latitude},${this.tripData.longitude}`;
        var url = "https://www.google.com/maps/dir/?api=1&travelmode=driving&layer=traffic&destination=" + (this.tripData.lat) + "," + (this.tripData.lng);
        if (this.detectMob()) {
          window.open(url).focus();
        } else {
          url = "https://www.google.com/maps/dir/?api=1&travelmode=driving&layer=traffic&destination=" + (this.tripData.lat) + "," + (this.tripData.lng);
          window.open(url, "_blank").focus();
        }
      },
      detectMob: function detectMob() {
        var toMatch = [
          /Android/i,
          /webOS/i,
          /iPhone/i,
          /iPad/i,
          /iPod/i,
          /BlackBerry/i,
          /Windows Phone/i ];

        return toMatch.some(function (toMatchItem) {
          return navigator.userAgent.match(toMatchItem);
        });
      },
    },
    computed: {
      cardStyle: function () {
        if (this.tripData.status === "Active") {
          return "card shs-bg-active";
        } else if (this.tripData.status === "Overdue") {
          return "card shs-bg-danger";
        } else if (this.tripData.status === "Pending") {
          return "card shs-bg-warning";
        } else if (this.tripData.status === "Completed") {
          return "card shs-bg-completed";
        } else {
          return "card";
        }
      },
    },
  };

  /* script */
              var __vue_script__ = script;
              
  /* template */
  var __vue_render__ = function() {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("div", { staticClass: "col-xl-6 mt-4 mb-4" }, [
      _c("div", { class: _vm.cardStyle }, [
        _c("div", { staticClass: "card-header mt-2" }, [
          _c("div", { staticClass: "d-flex align-items-start" }, [
            _c("div", { staticClass: "mr-auto" }, [
              _c("p", { staticClass: "text-primary mb-1" }, [
                _vm._v(
                  "\n            " +
                    _vm._s(_vm.__("VIAJE")) +
                    " #" +
                    _vm._s(_vm.tripData.idx + 1) +
                    "\n          "
                )
              ]),
              _vm._v(" "),
              _c("h5", { staticClass: "title font-w600 mb-2" }, [
                _c("a", {
                  staticClass: "text-black",
                  attrs: { href: "post-details.html" }
                }),
                _vm._v(
                  "\n            " +
                    _vm._s(_vm.tripData.document) +
                    "\n          "
                )
              ]),
              _vm._v(" "),
              _c("h5", { staticClass: "title font-w600 mb-2" }, [
                _c("a", {
                  staticClass: "text-black",
                  attrs: { href: "post-details.html" }
                }),
                _vm._v(
                  "\n            " +
                    _vm._s(_vm.tripData.document_type) +
                    "\n          "
                )
              ]),
              _vm._v(" "),
              _c("span", { staticClass: "font-weight-bolder" }, [
                _vm._v(
                  "\n            " +
                    _vm._s(_vm.__("Para")) +
                    ": " +
                    _vm._s(_vm.tripData.customer)
                )
              ])
            ]),
            _vm._v(" "),
            _c(
              "h3",
              { staticClass: "badge badge-success d-sm-inline-block d-none" },
              [_vm._v("\n          " + _vm._s(_vm.__("ACTIVO")) + "\n        ")]
            )
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "card-body" }, [
          _c("div", { staticClass: "row mb-4" }, [
            _c("div", { staticClass: "col-sm-6 mb-sm-0 mb-3 d-flex" }, [
              _c("div", { staticClass: "dt-icon mr-3 bgl-danger" }, [
                _c(
                  "svg",
                  {
                    attrs: {
                      width: "19",
                      height: "24",
                      viewBox: "0 0 19 24",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        d:
                          "M18.6601 8.6858C18.5437 8.44064 18.2965 8.28427 18.025 8.28427H10.9728L15.2413 1.06083C15.3697 0.843469 15.3718 0.573844 15.2466 0.354609C15.1214 0.135375 14.8884 -9.37014e-05 14.6359 4.86277e-08L8.61084 0.000656299C8.3608 0.000750049 8.12957 0.1335 8.00362 0.349453L0.0958048 13.905C-0.0310859 14.1224 -0.0319764 14.3911 0.0934142 14.6094C0.218805 14.8277 0.451352 14.9624 0.703117 14.9624H7.71037L5.66943 23.1263C5.58955 23.4457 5.74213 23.7779 6.03651 23.9255C6.13691 23.9757 6.24459 24 6.35123 24C6.55729 24 6.75923 23.9094 6.89638 23.7413L18.5699 9.43186C18.7415 9.22148 18.7766 8.93105 18.6601 8.6858V8.6858Z",
                        fill: "#FF4C41"
                      }
                    })
                  ]
                )
              ]),
              _vm._v(" "),
              _c("div", [
                _c("span", { staticClass: "font-weight-bolder" }, [
                  _vm._v(_vm._s(_vm.__("Hora solicitada")) + ":")
                ]),
                _vm._v(" "),
                _c("p", { staticClass: "mb-0 pt-1 font-w500 text-black" }, [
                  _vm._v(
                    "\n              " +
                      _vm._s(_vm.tripData.requested_time) +
                      "\n            "
                  )
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-sm-6 d-flex" }, [
              _c("div", { staticClass: "dt-icon mr-3 bgl-info" }, [
                _c(
                  "svg",
                  {
                    attrs: {
                      width: "24",
                      height: "24",
                      viewBox: "0 0 24 24",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        d:
                          "M19 5H18V3C18 2.73478 17.8946 2.48043 17.7071 2.29289C17.5196 2.10536 17.2652 2 17 2C16.7348 2 16.4804 2.10536 16.2929 2.29289C16.1054 2.48043 16 2.73478 16 3V5H8V3C8 2.73478 7.89464 2.48043 7.70711 2.29289C7.51957 2.10536 7.26522 2 7 2C6.73478 2 6.48043 2.10536 6.29289 2.29289C6.10536 2.48043 6 2.73478 6 3V5H5C4.20435 5 3.44129 5.31607 2.87868 5.87868C2.31607 6.44129 2 7.20435 2 8V9H22V8C22 7.20435 21.6839 6.44129 21.1213 5.87868C20.5587 5.31607 19.7957 5 19 5Z",
                        fill: "#92caff"
                      }
                    }),
                    _vm._v(" "),
                    _c("path", {
                      attrs: {
                        d:
                          "M2 19C2 19.7956 2.31607 20.5587 2.87868 21.1213C3.44129 21.6839 4.20435 22 5 22H19C19.7957 22 20.5587 21.6839 21.1213 21.1213C21.6839 20.5587 22 19.7956 22 19V11H2V19Z",
                        fill: "#51A6F5"
                      }
                    })
                  ]
                )
              ]),
              _vm._v(" "),
              _c("div", [
                _c("span", { staticClass: "font-weight-bolder" }, [
                  _vm._v(_vm._s(_vm.__("Hora completado")) + ":\n            ")
                ]),
                _vm._v(" "),
                _c("p", { staticClass: "mb-0 pt-1 font-w500 text-black" }, [
                  _vm._v(
                    "\n              " +
                      _vm._s(_vm.tripData.actual_arrival) +
                      "\n            "
                  )
                ])
              ])
            ])
          ]),
          _vm._v(" "),
          _c("p", { staticClass: "mb-4" }, [
            _vm._v("\n        " + _vm._s(_vm.tripData.details) + "\n      ")
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "mr-auto" }, [
            _c("p", { staticClass: "mb-2 text-black" }, [
              _vm._v(_vm._s(_vm.__("Detalles de cliente")))
            ]),
            _vm._v(" "),
            _c("p", { staticClass: "mb-2 text-black" }, [
              _c("i", {
                staticClass: "fa fa-user",
                attrs: { "aria-hidden": "true" }
              }),
              _vm._v(
                " " +
                  _vm._s(_vm.__("Contacto")) +
                  ":\n          " +
                  _vm._s(_vm.tripData.contact) +
                  "\n        "
              )
            ]),
            _vm._v(" "),
            _c("p", { staticClass: "mb-2 text-black" }, [
              _c("i", {
                staticClass: "fa fa-phone",
                attrs: { "aria-hidden": "true" }
              }),
              _vm._v(
                " " +
                  _vm._s(_vm.__("Teléfono")) +
                  ":\n          33633893\n        "
              )
            ]),
            _vm._v(" "),
            _vm._m(0)
          ])
        ]),
        _vm._v(" "),
        _c(
          "div",
          {
            staticClass:
              "card-footer d-sm-flex justify-content-between align-items-center"
          },
          [
            _c("div", { staticClass: "card-footer-link mb-4 mb-sm-0" }, [
              _c("p", { staticClass: "card-text text-dark d-inline" }, [
                _vm._v(
                  "\n          " +
                    _vm._s(_vm.__("Tiempo retraso ")) +
                    ": 00:23:54\n        "
                )
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "text-center" }, [
              _c(
                "button",
                {
                  staticClass: "btn shs-btn-success btn-lg",
                  attrs: { type: "button" }
                },
                [
                  _vm._v(
                    "\n          " + _vm._s(_vm.__("Completar")) + "\n        "
                  )
                ]
              )
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "text-center" }, [
              _c(
                "button",
                {
                  staticClass: "btn",
                  attrs: { type: "button", title: "Abrir en waze" },
                  on: { click: _vm.openInWaze }
                },
                [
                  _c(
                    "svg",
                    {
                      attrs: {
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 48 48",
                        width: "30px",
                        height: "30px"
                      }
                    },
                    [
                      _c("path", {
                        attrs: {
                          fill: "#37474f",
                          d:
                            "M27,38C9.1,38,5.2,33.2,3.6,31.1c-0.4-0.4-0.6-1-0.6-1.6C3,28.1,4.1,27,5.5,27C6.4,27,9,27,9,22.1 v-0.6C9,12.4,17.1,5,27,5s18,7.4,18,16.5S36.9,38,27,38z"
                        }
                      }),
                      _vm._v(" "),
                      _c("path", {
                        attrs: {
                          fill: "#eceff1",
                          d:
                            "M27,36c8.8,0,16-6.5,16-14.5S35.8,7,27,7s-16,6.5-16,14.5v0.6c0,6.2-3.8,6.9-5.5,6.9 C5.2,29,5,29.2,5,29.5c0,0.1,0,0.2,0.1,0.3C6.6,31.7,10,36,27,36z"
                        }
                      }),
                      _vm._v(" "),
                      _c("path", {
                        attrs: {
                          fill: "#37474f",
                          d:
                            "M32 16A2 2 0 1 0 32 20 2 2 0 1 0 32 16zM22 16A2 2 0 1 0 22 20 2 2 0 1 0 22 16zM27 29c-4.8 0-6.7-3.5-7-5.3-.1-.5.3-1.1.8-1.2.5-.1 1.1.3 1.2.8 0 .1.7 3.7 5 3.7 4.3 0 5-3.5 5-3.7.1-.5.6-.9 1.2-.8.5.1.9.6.8 1.1C33.7 25.5 31.8 29 27 29zM16.5 34A4.5 4.5 0 1 0 16.5 43 4.5 4.5 0 1 0 16.5 34z"
                        }
                      }),
                      _vm._v(" "),
                      _c("path", {
                        attrs: {
                          fill: "#607d8b",
                          d:
                            "M16.5 37A1.5 1.5 0 1 0 16.5 40A1.5 1.5 0 1 0 16.5 37Z"
                        }
                      }),
                      _vm._v(" "),
                      _c("path", {
                        attrs: {
                          fill: "#37474f",
                          d:
                            "M32.5 34A4.5 4.5 0 1 0 32.5 43A4.5 4.5 0 1 0 32.5 34Z"
                        }
                      }),
                      _vm._v(" "),
                      _c("path", {
                        attrs: {
                          fill: "#607d8b",
                          d:
                            "M32.5 37A1.5 1.5 0 1 0 32.5 40A1.5 1.5 0 1 0 32.5 37Z"
                        }
                      })
                    ]
                  )
                ]
              )
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "text-center" }, [
              _c(
                "button",
                {
                  staticClass: "btn",
                  attrs: { type: "button", title: "Abrir en google maps" },
                  on: { click: _vm.openInGoogleMaps }
                },
                [
                  _c(
                    "svg",
                    {
                      attrs: {
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 48 48",
                        width: "30px",
                        height: "30px"
                      }
                    },
                    [
                      _c("path", {
                        attrs: {
                          fill: "#1c9957",
                          d:
                            "M42,39V9c0-1.657-1.343-3-3-3H9C7.343,6,6,7.343,6,9v30c0,1.657,1.343,3,3,3h30C40.657,42,42,40.657,42,39z"
                        }
                      }),
                      _vm._v(" "),
                      _c("path", {
                        attrs: {
                          fill: "#3e7bf1",
                          d: "M9,42h30c1.657,0-15-16-15-16S7.343,42,9,42z"
                        }
                      }),
                      _vm._v(" "),
                      _c("path", {
                        attrs: {
                          fill: "#cbccc9",
                          d: "M42,39V9c0-1.657-16,15-16,15S42,40.657,42,39z"
                        }
                      }),
                      _vm._v(" "),
                      _c("path", {
                        attrs: {
                          fill: "#efefef",
                          d:
                            "M39,42c1.657,0,3-1.343,3-3v-0.245L26.245,23L23,26.245L38.755,42H39z"
                        }
                      }),
                      _vm._v(" "),
                      _c("path", {
                        attrs: {
                          fill: "#ffd73d",
                          d:
                            "M42,9c0-1.657-1.343-3-3-3h-0.245L6,38.755V39c0,1.657,1.343,3,3,3h0.245L42,9.245V9z"
                        }
                      }),
                      _vm._v(" "),
                      _c("path", {
                        attrs: {
                          fill: "#d73f35",
                          d:
                            "M36,2c-5.523,0-10,4.477-10,10c0,6.813,7.666,9.295,9.333,19.851C35.44,32.531,35.448,33,36,33s0.56-0.469,0.667-1.149C38.334,21.295,46,18.813,46,12C46,6.477,41.523,2,36,2z"
                        }
                      }),
                      _vm._v(" "),
                      _c("path", {
                        attrs: {
                          fill: "#752622",
                          d: "M36 8.5A3.5 3.5 0 1 0 36 15.5A3.5 3.5 0 1 0 36 8.5Z"
                        }
                      }),
                      _vm._v(" "),
                      _c("path", {
                        attrs: {
                          fill: "#fff",
                          d:
                            "M14.493,12.531v2.101h2.994c-0.392,1.274-1.455,2.185-2.994,2.185c-1.833,0-3.318-1.485-3.318-3.318s1.486-3.318,3.318-3.318c0.824,0,1.576,0.302,2.156,0.799l1.548-1.547C17.22,8.543,15.92,8,14.493,8c-3.038,0-5.501,2.463-5.501,5.5s2.463,5.5,5.501,5.5c4.81,0,5.637-4.317,5.184-6.461L14.493,12.531z"
                        }
                      })
                    ]
                  )
                ]
              )
            ])
          ]
        )
      ])
    ])
  };
  var __vue_staticRenderFns__ = [
    function() {
      var _vm = this;
      var _h = _vm.$createElement;
      var _c = _vm._self._c || _h;
      return _c("p", { staticClass: "mb-2 text-black" }, [
        _c("i", {
          staticClass: "fa fa-map-marker",
          attrs: { "aria-hidden": "true" }
        }),
        _vm._v(" "),
        _vm._v(
          "\n          Address Line1 : km 15.5 Carretera a El Salvador, Edificio Plaza\n          Concepción, Condado Concepción, Cdad. de Guatemala 01051 Address\n          Line2: Condado Concepcion Municipio: Santa Catarina Pinula\n          Departamento: Guatemala Pais: Guatemala Codigo Postal: 01051\n        "
        )
      ])
    }
  ];
  __vue_render__._withStripped = true;

    /* style */
    var __vue_inject_styles__ = function (inject) {
      if (!inject) { return }
      inject("data-v-8ab86356_0", { source: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", map: {"version":3,"sources":[],"names":[],"mappings":"","file":"DataCard.vue"}, media: undefined });

    };
    /* scoped */
    var __vue_scope_id__ = undefined;
    /* module identifier */
    var __vue_module_identifier__ = undefined;
    /* functional template */
    var __vue_is_functional_template__ = false;
    /* component normalizer */
    function __vue_normalize__(
      template, style, script,
      scope, functional, moduleIdentifier,
      createInjector, createInjectorSSR
    ) {
      var component = (typeof script === 'function' ? script.options : script) || {};

      // For security concerns, we use only base name in production mode.
      component.__file = "/home/ronaldo/frappe-bench/apps/revelare/revelare/public/js/components/DataCard.vue";

      if (!component.render) {
        component.render = template.render;
        component.staticRenderFns = template.staticRenderFns;
        component._compiled = true;

        if (functional) { component.functional = true; }
      }

      component._scopeId = scope;

      {
        var hook;
        if (style) {
          hook = function(context) {
            style.call(this, createInjector(context));
          };
        }

        if (hook !== undefined) {
          if (component.functional) {
            // register for functional component in vue file
            var originalRender = component.render;
            component.render = function renderWithStyleInjection(h, context) {
              hook.call(context);
              return originalRender(h, context)
            };
          } else {
            // inject component registration as beforeCreate hook
            var existing = component.beforeCreate;
            component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
          }
        }
      }

      return component
    }
    /* style inject */
    function __vue_create_injector__() {
      var head = document.head || document.getElementsByTagName('head')[0];
      var styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {});
      var isOldIE =
        typeof navigator !== 'undefined' &&
        /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

      return function addStyle(id, css) {
        if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

        var group = isOldIE ? css.media || 'default' : id;
        var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

        if (!style.ids.includes(id)) {
          var code = css.source;
          var index = style.ids.length;

          style.ids.push(id);

          if (isOldIE) {
            style.element = style.element || document.querySelector('style[data-group=' + group + ']');
          }

          if (!style.element) {
            var el = style.element = document.createElement('style');
            el.type = 'text/css';

            if (css.media) { el.setAttribute('media', css.media); }
            if (isOldIE) {
              el.setAttribute('data-group', group);
              el.setAttribute('data-next-index', '0');
            }

            head.appendChild(el);
          }

          if (isOldIE) {
            index = parseInt(style.element.getAttribute('data-next-index'));
            style.element.setAttribute('data-next-index', index + 1);
          }

          if (style.element.styleSheet) {
            style.parts.push(code);
            style.element.styleSheet.cssText = style.parts
              .filter(Boolean)
              .join('\n');
          } else {
            var textNode = document.createTextNode(code);
            var nodes = style.element.childNodes;
            if (nodes[index]) { style.element.removeChild(nodes[index]); }
            if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
            else { style.element.appendChild(textNode); }
          }
        }
      }
    }
    /* style inject SSR */
    

    
    var DataCard = __vue_normalize__(
      { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
      __vue_inject_styles__,
      __vue_script__,
      __vue_scope_id__,
      __vue_is_functional_template__,
      __vue_module_identifier__,
      __vue_create_injector__,
      undefined
    );

  //

  var script$1 = {
    name: "MainNavigatorDashboard",
    components: {
      DataCard: DataCard,
    },
    data: function data() {
      return {
        errandTrips: [],
        stops: [],
        nowDateTime: frappe.datetime.now_datetime(),
        tripsToDo: [], // contendra todos los viajes no completado
        tripsCompleted: [], // contendra los viajes completados
      };
    },
    mounted: function mounted() {
      // this.getData();
      this.getErrandTrips();
      // console.log(this.stops);
    },
    methods: {
      getErrandTrips: function getErrandTrips() {
        //   this.stops = dummy_data;
        var _this = this;

        frappe.call({
          method: "revelare.api.get_errand_trips",
          async: true,
          callback: function (data) {
            _this.errandTrips = data.message;

            console.log(data.message);
          },
        });
      },
      selectedErrandTrip: function selectedErrandTrip(event) {
        console.log(event.target.value);
        var _this = this;

        frappe.call({
          method: "revelare.api.get_errand_trip_stops",
          args: {
            name: event.target.value,
          },
          async: true,
          callback: function (data) {
            _this.stops = data.message;

            console.log(data.message);
          },
        });
      },
      autoUpdateData: function autoUpdateData() {
        // Aqui se agregara un timer
      },
      updateData: function updateData() {
        // Aqui se actualizara la data manualmente
      },
    },
    computed: {
      numberOfActives: function numberOfActives() {
        var actives = this.stops.filter(
          function (trip) { return trip.status === "Active"; }
        ).length;
        return actives;
      },
      numberOfOverdues: function numberOfOverdues() {
        var overdue = this.stops.filter(
          function (trip) { return trip.status === "Overdue"; }
        ).length;
        return overdue;
      },
      numberOfPending: function numberOfPending() {
        var pending = this.stops.filter(
          function (trip) { return trip.status === "Pending"; }
        ).length;
        return pending;
      },
      numberOfCompleted: function numberOfCompleted() {
        var completed = this.stops.filter(
          function (trip) { return trip.status === "Completed"; }
        ).length;
        return completed;
      },
    },
  };

  /* script */
              var __vue_script__$1 = script$1;
              
  /* template */
  var __vue_render__$1 = function() {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("div", { staticClass: "shs-container-fluid" }, [
      _c("div", { staticClass: "project-nav" }, [
        _c("div", { staticClass: "card-action card-tabs mr-auto" }, [
          _c("ul", { staticClass: "nav nav-tabs style-2" }, [
            _c("li", { staticClass: "nav-item" }, [
              _c(
                "select",
                {
                  staticClass: "custom-select custom-select-lg mt-1",
                  on: {
                    change: function($event) {
                      return _vm.selectedErrandTrip($event)
                    }
                  }
                },
                [
                  _c("option", { attrs: { selected: "" } }),
                  _vm._v(" "),
                  _vm._l(_vm.errandTrips, function(errandTrip) {
                    return _c(
                      "option",
                      {
                        key: errandTrip.name,
                        domProps: { value: errandTrip.name }
                      },
                      [
                        _vm._v(
                          "\n              " +
                            _vm._s(errandTrip.name) +
                            "\n            "
                        )
                      ]
                    )
                  })
                ],
                2
              )
            ]),
            _vm._v(" "),
            _vm._m(0),
            _vm._v(" "),
            _c("li", { staticClass: "nav-item" }, [
              _c(
                "a",
                {
                  staticClass: "nav-link active",
                  attrs: {
                    type: "button",
                    "data-toggle": "tab",
                    "aria-expanded": "false"
                  }
                },
                [
                  _vm._v(
                    "\n            " +
                      _vm._s(_vm.__("Todos los viajes")) +
                      "\n            "
                  ),
                  _c(
                    "span",
                    { staticClass: "badge badge-pill shadow-dark badge-dark" },
                    [_vm._v("\n              " + _vm._s(this.stops.length))]
                  )
                ]
              )
            ]),
            _vm._v(" "),
            _c("li", { staticClass: "nav-item" }, [
              _c(
                "a",
                {
                  staticClass: "nav-link",
                  attrs: {
                    type: "button",
                    "data-toggle": "tab",
                    "aria-expanded": "false"
                  }
                },
                [
                  _vm._v(
                    "\n            " +
                      _vm._s(_vm.__("Activos")) +
                      "\n            "
                  ),
                  _c(
                    "span",
                    {
                      staticClass: "badge badge-pill badge-success shadow-success"
                    },
                    [_vm._v(_vm._s(_vm.numberOfActives))]
                  )
                ]
              )
            ]),
            _vm._v(" "),
            _c("li", { staticClass: "nav-item" }, [
              _c(
                "a",
                {
                  staticClass: "nav-link",
                  attrs: {
                    type: "button",
                    "data-toggle": "tab",
                    "aria-expanded": "true"
                  }
                },
                [
                  _vm._v(
                    "\n            " +
                      _vm._s(_vm.__("Atrasados")) +
                      "\n            "
                  ),
                  _c(
                    "span",
                    {
                      staticClass: "badge badge-pill badge-danger shadow-danger"
                    },
                    [_vm._v(_vm._s(_vm.numberOfOverdues))]
                  )
                ]
              )
            ]),
            _vm._v(" "),
            _c("li", { staticClass: "nav-item" }, [
              _c(
                "a",
                {
                  staticClass: "nav-link",
                  attrs: {
                    type: "button",
                    "data-toggle": "tab",
                    "aria-expanded": "true"
                  }
                },
                [
                  _vm._v(
                    "\n            " +
                      _vm._s(_vm.__("Pendientes")) +
                      "\n            "
                  ),
                  _c(
                    "span",
                    {
                      staticClass: "badge badge-pill badge-warning shadow-warning"
                    },
                    [_vm._v(_vm._s(_vm.numberOfPending))]
                  )
                ]
              )
            ]),
            _vm._v(" "),
            _c("li", { staticClass: "nav-item" }, [
              _c(
                "a",
                {
                  staticClass: "nav-link",
                  attrs: {
                    type: "button",
                    "data-toggle": "tab",
                    "aria-expanded": "true"
                  }
                },
                [
                  _vm._v(_vm._s(_vm.__("Completados")) + "\n            "),
                  _c(
                    "span",
                    {
                      staticClass:
                        "badge badge-pill badge-secondary shadow-secondary"
                    },
                    [_vm._v(_vm._s(_vm.numberOfCompleted))]
                  )
                ]
              )
            ])
          ])
        ])
      ]),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "row" },
        _vm._l(_vm.stops, function(stop) {
          return _c("DataCard", { key: stop.idx, attrs: { tripData: stop } })
        }),
        1
      )
    ])
  };
  var __vue_staticRenderFns__$1 = [
    function() {
      var _vm = this;
      var _h = _vm.$createElement;
      var _c = _vm._self._c || _h;
      return _c("li", { staticClass: "nav-item mr-4" }, [
        _c("select", { staticClass: "custom-select custom-select-lg mt-1" }, [
          _c("option", { attrs: { selected: "" } }),
          _vm._v(" "),
          _c("option", { attrs: { value: "1" } }, [_vm._v("Lewis Hamilton")]),
          _vm._v(" "),
          _c("option", { attrs: { value: "2" } }, [_vm._v("Pablito")]),
          _vm._v(" "),
          _c("option", { attrs: { value: "3" } }, [_vm._v("Paco")])
        ])
      ])
    }
  ];
  __vue_render__$1._withStripped = true;

    /* style */
    var __vue_inject_styles__$1 = function (inject) {
      if (!inject) { return }

      inject("data-v-799556bd_0", { source: "\n.custom-select[data-v-799556bd] {\n  width: auto !important;\n  border: none !important;\n}\n.project-nav[data-v-799556bd] {\n  display: inline-block;\n  vertical-align: middle;\n}\n", map: {"version":3,"sources":["/home/ronaldo/frappe-bench/apps/revelare/revelare/public/js/MainNavigatorDashboard.vue"],"names":[],"mappings":";AAoKA;EACA,sBAAA;EACA,uBAAA;AACA;AAEA;EACA,qBAAA;EACA,sBAAA;AACA","file":"MainNavigatorDashboard.vue","sourcesContent":["<template>\n  <div class=\"shs-container-fluid\">\n    <!-- Botones header -->\n    <div class=\"project-nav\">\n      <div class=\"card-action card-tabs mr-auto\">\n        <ul class=\"nav nav-tabs style-2\">\n          <li class=\"nav-item\">\n            <select class=\"custom-select custom-select-lg mt-1\">\n              <option selected>{{ __(\"Errand Trip\") }}</option>\n              <option value=\"1\">One</option>\n              <option value=\"2\">Two</option>\n              <option value=\"3\">Three</option>\n            </select>\n          </li>\n\n          <li class=\"nav-item mr-4\">\n            <select class=\"custom-select custom-select-lg mt-1\">\n              <option selected>{{ __(\"Driver\") }}</option>\n              <option value=\"1\">Lewis Hamilton</option>\n              <option value=\"2\">Pablito</option>\n              <option value=\"3\">Paco</option>\n            </select>\n          </li>\n\n          <li class=\"nav-item\">\n            <a\n              type=\"button\"\n              class=\"nav-link active\"\n              data-toggle=\"tab\"\n              aria-expanded=\"false\"\n            >\n              {{ __(\"Todos los viajes\") }}\n              <span class=\"badge badge-pill shadow-dark badge-dark\">\n                {{ this.stops.length }}</span\n              >\n            </a>\n          </li>\n\n          <li class=\"nav-item\">\n            <a\n              type=\"button\"\n              class=\"nav-link\"\n              data-toggle=\"tab\"\n              aria-expanded=\"false\"\n            >\n              {{ __(\"Activos\") }}\n              <span class=\"badge badge-pill badge-success shadow-success\">{{\n                numberOfActives\n              }}</span>\n            </a>\n          </li>\n\n          <li class=\"nav-item\">\n            <a\n              type=\"button\"\n              class=\"nav-link\"\n              data-toggle=\"tab\"\n              aria-expanded=\"true\"\n            >\n              {{ __(\"Atrasados\") }}\n              <span class=\"badge badge-pill badge-danger shadow-danger\">{{\n                numberOfOverdues\n              }}</span>\n            </a>\n          </li>\n\n          <li class=\"nav-item\">\n            <a\n              type=\"button\"\n              class=\"nav-link\"\n              data-toggle=\"tab\"\n              aria-expanded=\"true\"\n            >\n              {{ __(\"Pendientes\") }}\n              <span class=\"badge badge-pill badge-warning shadow-warning\">{{\n                numberOfPending\n              }}</span>\n            </a>\n          </li>\n\n          <li class=\"nav-item\">\n            <a\n              type=\"button\"\n              class=\"nav-link\"\n              data-toggle=\"tab\"\n              aria-expanded=\"true\"\n              >{{ __(\"Completados\") }}\n              <span class=\"badge badge-pill badge-secondary shadow-secondary\">{{\n                numberOfCompleted\n              }}</span></a\n            >\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <!-- Render dinamico de cards -->\n    <div class=\"row\">\n      <DataCard v-for=\"stop in stops\" :key=\"stop.idx\" :tripData=\"stop\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport DataCard from \"./components/DataCard.vue\";\nimport dummy_data from \"./dummy_data.js\";\n\nexport default {\n  name: \"MainNavigatorDashboard\",\n  components: {\n    DataCard,\n  },\n  data() {\n    return {\n      stops: [],\n      nowDateTime: frappe.datetime.now_datetime(),\n      tripsToDo: [], // contendra todos los viajes no completado\n      tripsCompleted: [], // contendra los viajes completados\n    };\n  },\n  mounted() {\n    // this.getData();\n    // console.log(this.stops);\n  },\n  methods: {\n    getData() {\n      //   this.stops = dummy_data;\n      let _this = this;\n\n      frappe.call({\n        method: \"shs_dashboard.api.sales_order_qty\",\n        async: true,\n        callback: function (data) {\n          _this.stops = data.message;\n\n          console.log(data.message);\n        },\n      });\n    },\n    autoUpdateData() {\n      // Aqui se agregara un timer\n    },\n    updateData() {\n      // Aqui se actualizara la data manualmente\n    },\n  },\n  computed: {\n    numberOfActives() {\n      return this.stops.filter((trip) => trip.status === \"active\").length;\n    },\n    numberOfOverdues() {\n      return this.stops.filter((trip) => trip.status === \"overdue\").length;\n    },\n    numberOfPending() {\n      return this.stops.filter((trip) => trip.status === \"pending\").length;\n    },\n    numberOfCompleted() {\n      return this.stops.filter((trip) => trip.status === \"completed\").length;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.custom-select {\n  width: auto !important;\n  border: none !important;\n}\n\n.project-nav {\n  display: inline-block;\n  vertical-align: middle;\n}\n</style>"]}, media: undefined });

    };
    /* scoped */
    var __vue_scope_id__$1 = "data-v-799556bd";
    /* module identifier */
    var __vue_module_identifier__$1 = undefined;
    /* functional template */
    var __vue_is_functional_template__$1 = false;
    /* component normalizer */
    function __vue_normalize__$1(
      template, style, script,
      scope, functional, moduleIdentifier,
      createInjector, createInjectorSSR
    ) {
      var component = (typeof script === 'function' ? script.options : script) || {};

      // For security concerns, we use only base name in production mode.
      component.__file = "/home/ronaldo/frappe-bench/apps/revelare/revelare/public/js/MainNavigatorDashboard.vue";

      if (!component.render) {
        component.render = template.render;
        component.staticRenderFns = template.staticRenderFns;
        component._compiled = true;

        if (functional) { component.functional = true; }
      }

      component._scopeId = scope;

      {
        var hook;
        if (style) {
          hook = function(context) {
            style.call(this, createInjector(context));
          };
        }

        if (hook !== undefined) {
          if (component.functional) {
            // register for functional component in vue file
            var originalRender = component.render;
            component.render = function renderWithStyleInjection(h, context) {
              hook.call(context);
              return originalRender(h, context)
            };
          } else {
            // inject component registration as beforeCreate hook
            var existing = component.beforeCreate;
            component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
          }
        }
      }

      return component
    }
    /* style inject */
    function __vue_create_injector__$1() {
      var head = document.head || document.getElementsByTagName('head')[0];
      var styles = __vue_create_injector__$1.styles || (__vue_create_injector__$1.styles = {});
      var isOldIE =
        typeof navigator !== 'undefined' &&
        /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

      return function addStyle(id, css) {
        if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

        var group = isOldIE ? css.media || 'default' : id;
        var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

        if (!style.ids.includes(id)) {
          var code = css.source;
          var index = style.ids.length;

          style.ids.push(id);

          if (isOldIE) {
            style.element = style.element || document.querySelector('style[data-group=' + group + ']');
          }

          if (!style.element) {
            var el = style.element = document.createElement('style');
            el.type = 'text/css';

            if (css.media) { el.setAttribute('media', css.media); }
            if (isOldIE) {
              el.setAttribute('data-group', group);
              el.setAttribute('data-next-index', '0');
            }

            head.appendChild(el);
          }

          if (isOldIE) {
            index = parseInt(style.element.getAttribute('data-next-index'));
            style.element.setAttribute('data-next-index', index + 1);
          }

          if (style.element.styleSheet) {
            style.parts.push(code);
            style.element.styleSheet.cssText = style.parts
              .filter(Boolean)
              .join('\n');
          } else {
            var textNode = document.createTextNode(code);
            var nodes = style.element.childNodes;
            if (nodes[index]) { style.element.removeChild(nodes[index]); }
            if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
            else { style.element.appendChild(textNode); }
          }
        }
      }
    }
    /* style inject SSR */
    

    
    var MainNavigatorDashboard = __vue_normalize__$1(
      { render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 },
      __vue_inject_styles__$1,
      __vue_script__$1,
      __vue_scope_id__$1,
      __vue_is_functional_template__$1,
      __vue_module_identifier__$1,
      __vue_create_injector__$1,
      undefined
    );

  frappe.provide('frappe.revelare');   // create a namespace within the Frappe instance
  frappe.provide('frappe');   // create a namespace within the Frappe instance

  frappe.revelare.NavigationDashboard = class {   // create a glue class, wich will manage your Vue instance
    constructor(ref) {
    var parent = ref.parent;

      this.$parent = $(parent);
      this.page = parent.page;
      this.setup_header();
      this.make_body();
    }
    make_body() {
      this.$main_navigator_dashboard = this.$parent.find('.layout-main');   // bind the new Vue instance to the main <div> on the page
      this.vue = new Vue({
        el: this.$main_navigator_dashboard[0],
        data: {
          // timer: ''
        },
        render: function (h) { return h(MainNavigatorDashboard); },

      });
    }
    setup_header() {
    }
  };

  // Copyright (c) 2018, Si Hay Sistema (SHS) and contributors
  // For license information, please see license.txt

  /*
  // --- FUNCIONALIDAD EXTRA ---

  // TO FIX: 1. Cuando se crea un nuevo producto desde un dialogo.
  //         2. Recomendar no utilizar el dialogo para crear productos, sino a pantalla completa para acceder a todas las funciones
  //            Se puede desactivar el dialogo personalizando el formulario correspondiente.
  // frappe.ui.form.on("Item", {
  //     // VERIFICACION AL GUARDAR DOCUMENTO: Cuando se guardar el documento, verificara en la tabla hija 'uoms'
  //     // que exista un elemento default, si no existe un elemento default no permitira guardar el documento.
  //     validate: function (frm, cdt, cdn) {
  //         if (cur_frm.doc.uoms === undefined) {
  //             frappe.msgprint('Por favor selecciona una unidad de medida default para Sales Analitycs 2');
  //             frm.disable_save();
  //         } else {
  //             let uncheck = 0;
  //             frm.doc.uoms.forEach((uom_element, index) => {
  //                 if (uom_element.revelare_default_uom_sales_analytics_2) {
  //                     frm.enable_save();
  //                     uncheck++;
  //                 }
  //             });
  //             if (uncheck < 1) {
  //                 // FIX MESSAGE
  //                 frappe.msgprint('Por favor selecciona una unidad de medida default para Sales Analitycs');
  //                 frm.disable_save();
  //             }
  //         }
  //     }
  // });
  */

  // UOM Conversion Detail TABLA HIJA DE Item
  frappe.ui.form.on('UOM Conversion Detail', {
    // Ejecuta la funcion cuando exista una interaccion con 'revelare_default_uom_sales_analytics_2'
    revelare_default_uom_sales_analytics_2: function (frm, cdt, cdn) {
      var check = 0;
      // Recorre los elementos de la tabla hija ubicandose exactamente en la fila en que
      // estemos trabajando, esto para obtener datos exactos.
      frm.doc.uoms.forEach(function (uom_row_i, index_i) {
        if (uom_row_i.name == cdn) {
          (uom_row_i.revelare_default_uom_sales_analytics_2) ? frm.enable_save() : console.log('unckecked');
          // FORMA 2! RECOMENDADA ES5 > :)
          // Unicamente va permitir que exista un elemento seleccionado
          frm.doc.uoms.forEach(function (uom_row, indice) {
            if (uom_row.revelare_default_uom_sales_analytics_2) {
              check++;
              if (check > 1) {
                frappe.msgprint('Solamente debe haber un elemento seleccionado');
                frm.doc.uoms[index_i].revelare_default_uom_sales_analytics_2 = 0;
                refresh_field('uoms');
                // console.log(uom_row_i.revelare_default_uom_sales_analytics_2)
              }
            }
          });
        }
      });
    }
  });

  // Validando CustomField Journal Entry Account
  frappe.ui.form.on('Journal Entry', {
    setup: function (frm) {
      cur_frm.set_query("inflow_component", "accounts", function () {
        return {
          "filters": {
            "is_group": 0,
            "cash_effect": "Inflow"
          }
        };
      });
      cur_frm.set_query("outflow_component", "accounts", function () {
        return {
          "filters": {
            "is_group": 0,
            "cash_effect": "Outflow"
          }
        };
      });
    },
    // before_save: function (frm) {
    //   let length_accounts = frm.doc.accounts.length || [];
    //   if (length_accounts > 1) {
    //     let accounts = cur_frm.doc.accounts;
    //     accounts.forEach(element => console.log(element.account_type));
    //   }
    // }
  });

  // Funcionalidad sobre tabla hija en Journal Entry
  frappe.ui.form.on('Journal Entry Account', {
    account: function (frm, cdt, cdn) {
      validate_cash_flow_component(frm, cdt, cdn);
    },
    party_type: function (frm, cdt, cdn) {
      var row = frappe.get_doc(cdt, cdn);
      if (row.party_type == 'Customer') {
        // Dandode el valor al campo respecto a Party Type
        cur_frm.set_value(row.inflow_component, 'Receipts from Customers');
      }
      frm.refresh();
    },
    debit_in_account_currency: function (frm, cdt, cdn) {
      validate_cash_flow_component(frm, cdt, cdn, field = 'debit');
    },
    credit_in_account_currency: function (frm, cdt, cdn) {
      validate_cash_flow_component(frm, cdt, cdn, field = 'credit');
    },
    form_render: function (frm, cdt, cdn) {
      validate_cash_flow_component(frm, cdt, cdn);
    }
  });

  function validate_cash_flow_component(frm, cdt, cdn, field) {
    if ( field === void 0 ) field = '';

    //Creamos objeto de la tabla hija
    var row = frappe.get_doc(cdt, cdn);
    // Validamos con un booleano si desde python el tipo de cuenta es 'cash' o 'bank'
    frappe.call({
      method: 'revelare.data.get_type_account',
      args: {
        account_name: row.account
      },
      callback: function (r) {
        console.log(r.message);
        if (r.message == true) {
          // En el campo debito, si el debito es = 0 y el credito es > 0
          if (row.credit_in_account_currency > 0 && (row.debit_in_account_currency == 0 || row.debit_in_account_currency == undefined)) {
            // Hacemos visible el campo outflow_component
            var df = frappe.meta.get_docfield("Journal Entry Account", "outflow_component", frm.doc.name);
            df.hidden = 0;

            // Y ocultamos el campo inflow_component
            var df2 = frappe.meta.get_docfield("Journal Entry Account", "inflow_component", frm.doc.name);
            df2.hidden = 1;
            row.debit_in_account_currency = 0;
            // En el campo debito, si el debito es = 0 y el credito es > 0
          } else if (row.debit_in_account_currency > 0 && (row.credit_in_account_currency == 0 || row.credit_in_account_currency == undefined)) {
            // Hacemos visible el campo inflow_component
            var df$1 = frappe.meta.get_docfield("Journal Entry Account", "inflow_component", frm.doc.name);
            df$1.hidden = 0;

            // Y ocultamos el campo outflow_component
            var df2$1 = frappe.meta.get_docfield("Journal Entry Account", "outflow_component", frm.doc.name);
            df2$1.hidden = 1;
            row.credit_in_account_currency = 0;
          } else if (row.debit_in_account_currency > 0 && row.credit_in_account_currency > 0) {
            // Si estamos en el campo de credit ocultamos el inflow
            if (field == 'credit') {
              var df$2 = frappe.meta.get_docfield("Journal Entry Account", "inflow_component", frm.doc.name);
              df$2.hidden = 1;
              var df2$2 = frappe.meta.get_docfield("Journal Entry Account", "outflow_component", frm.doc.name);
              df2$2.hidden = 0;
              row.debit_in_account_currency = 0;
              // Si estamos en el campo de debit ocultamos el outflow
            } else if (field == 'debit') {
              var df$3 = frappe.meta.get_docfield("Journal Entry Account", "inflow_component", frm.doc.name);
              df$3.hidden = 0;
              var df2$3 = frappe.meta.get_docfield("Journal Entry Account", "outflow_component", frm.doc.name);
              df2$3.hidden = 1;
              row.credit_in_account_currency = 0;
            }
          } else if ((row.credit_in_account_currency == undefined) && (row.debit_in_account_currency == undefined)) {
            // Hacemos visible el campo inflow_component
            var df$4 = frappe.meta.get_docfield("Journal Entry Account", "inflow_component", frm.doc.name);
            df$4.hidden = 0;

            // Y ocultamos el campo outflow_component
            var df2$4 = frappe.meta.get_docfield("Journal Entry Account", "outflow_component", frm.doc.name);
            df2$4.hidden = 1;
          } else {
            // Ocultamos los dos campos
            var df$5 = frappe.meta.get_docfield("Journal Entry Account", "inflow_component", frm.doc.name);
            df$5.hidden = 1;

            var df2$5 = frappe.meta.get_docfield("Journal Entry Account", "outflow_component", frm.doc.name);
            df2$5.hidden = 1;
          }
          frm.refresh();
        } else {
          // Ocultamos el campo inflow_component
          var df$6 = frappe.meta.get_docfield("Journal Entry Account", "inflow_component", frm.doc.name);
          df$6.hidden = 1;

          // Ocultamos el campo direct_cash_flow_component
          var df2$6 = frappe.meta.get_docfield("Journal Entry Account", "outflow_component", frm.doc.name);
          df2$6.hidden = 1;

          row.inflow_component = '';
          row.outflow_component = '';
          frm.refresh_fields();
        }
      }
    });
  }


  // Validando customfield de Payment Entry
  frappe.ui.form.on("Payment Entry", {
    setup: function (frm) {
      cur_frm.set_query("inflow_component", function () {
        return {
          "filters": {
            "is_group": 0,
            "cash_effect": "Inflow"
          }
        };
      });
      cur_frm.set_query("outflow_component", function () {
        return {
          "filters": {
            "is_group": 0,
            "cash_effect": "Outflow"
          }
        };
      });
    },
    refresh: function (frm) {
      // Validamos los campos al momento de que cargue el documento
      if (cur_frm.doc.payment_type == 'Pay') {
        // Al ser pago, habilitamos el campo salida de flujo "outflow"
        var df = frappe.meta.get_docfield("Payment Entry", "outflow_component", frm.doc.name);
        df.hidden = 0;

        // Al ser pago, deshabilitamos el campo entra de flujo "inflow"
        var df2 = frappe.meta.get_docfield("Payment Entry", "inflow_component", frm.doc.name);
        df2.hidden = 1;
      } else if (cur_frm.doc.payment_type == 'Receive') {
        // Al ser pago, deshabilitamos el campo salida de flujo "outflow"
        var df$1 = frappe.meta.get_docfield("Payment Entry", "outflow_component", frm.doc.name);
        df$1.hidden = 1;

        // Al ser entrada, habilitamos el campo entra de flujo "inflow"
        var df2$1 = frappe.meta.get_docfield("Payment Entry", "inflow_component", frm.doc.name);
        df2$1.hidden = 0;
      } else {
        // Al ser transferencia, deshabilitamos los dos campos
        var df$2 = frappe.meta.get_docfield("Payment Entry", "outflow_component", frm.doc.name);
        df$2.hidden = 1;

        var df2$2 = frappe.meta.get_docfield("Payment Entry", "inflow_component", frm.doc.name);
        df2$2.hidden = 1;
      }
    },
    payment_type: function (frm) {
      console.log(frm.doc.payment_type);
      if (cur_frm.doc.payment_type == 'Pay') {
        // Al ser pago, habilitamos el campo salida de flujo "outflow"
        var df = frappe.meta.get_docfield("Payment Entry", "outflow_component", frm.doc.name);
        df.hidden = 0;

        // Al ser pago, deshabilitamos el campo entra de flujo "inflow"
        var df2 = frappe.meta.get_docfield("Payment Entry", "inflow_component", frm.doc.name);
        df2.hidden = 1;
      } else if (cur_frm.doc.payment_type == 'Receive') {
        // Al ser pago, deshabilitamos el campo salida de flujo "outflow"
        var df$1 = frappe.meta.get_docfield("Payment Entry", "outflow_component", frm.doc.name);
        df$1.hidden = 1;

        // Al ser entrada, habilitamos el campo entra de flujo "inflow"
        var df2$1 = frappe.meta.get_docfield("Payment Entry", "inflow_component", frm.doc.name);
        df2$1.hidden = 0;
        console.log('Es Una entrada');
      } else {
        // Al ser transferencia, deshabilitamos los dos campos
        var df$2 = frappe.meta.get_docfield("Payment Entry", "outflow_component", frm.doc.name);
        df$2.hidden = 1;

        var df2$2 = frappe.meta.get_docfield("Payment Entry", "inflow_component", frm.doc.name);
        df2$2.hidden = 1;

      }
    }
  });

}());
//# sourceMappingURL=revelar.min.js.map
